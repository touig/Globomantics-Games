name: Build and deploy web game

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ main ]

env:
  AZURE_WEBAPP_NAME: 'globomantics-web-game'   # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '5.0'           

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Display the event that triggered the workflow
      - run: echo "The job was triggered by a ${{ github.event_name }} event."

      # Information about the repository and branch
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      # Use Action located in https://github.com/actions
      - name: Check out repository code
        uses: actions/checkout@v2  

      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      
      - run: echo "Your repository has been copied to the path ${{ github.workspace }} on the runner."
      
      - run: echo "The workflow is now ready to test your code on the runner."
      
      - name: conditional step when event name is pull request
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "This event is a pull request"

      #- uses: actions/checkout@main
      
      - name: 'Setup .NET Core'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
      
      - name: 'Build app package'
        run: |
          dotnet restore '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/src/web-game/Globomantics.sln'
          dotnet build '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/src/web-game/Globomantics.sln' --configuration Release
          dotnet publish '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/src/web-game/Globomantics.sln' -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/app-package' 
