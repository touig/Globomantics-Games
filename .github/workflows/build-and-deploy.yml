name: Build and deploy web game - Touig

on:
  push:
    branches: [ develop ]
  pull_request_target:
    branches: [ recette, main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: 'globomantics-web-game'   # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '9.0'

jobs:
  analyze_codeql:
    uses: ./.github/workflows/codeql.yml  # use the callable tests job to run tests

  build-and-deploy:
    runs-on: ubuntu-latest

    needs: [analyze_codeql]

    steps:
      # Display the event that triggered the workflow
      - run: echo "The job was triggered by a ${{ github.event_name }} event."

      # Information about the repository and branch
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      # Date du Pipeline
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      # Use Action located in https://github.com/actions
      - name: Check out repository code
        uses: actions/checkout@v2  

      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      
      - run: echo "Your repository has been copied to the path ${{ github.workspace }} on the runner."

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      
      - name: List of the GitHub Actions environment variables on Windows
        run: env
      
      - name: conditional step when event name is pull request
        if: ${{ github.event_name == 'pull_request_target' }}
        run: echo "This event is a pull request_target"

      
      - name: 'Setup .NET Core'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 

      - name: Display dotnet version
        run: dotnet --version
        
      - run: echo "The preinstalled tools are located here on the runner ${{ runner.tool_cache }}."
        
      - name: List files in tool cache
        run: |
          ls ${{ runner.tool_cache }}
        
      - run: echo "This job's status is ${{ job.status }}."

      - name: 'Build app'
        run: |
          dotnet restore '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/src/web-game/Globomantics.sln'
          dotnet build '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/src/web-game/Globomantics.sln' --configuration Release --no-restore
          
      - name: 'Package app'
        run: dotnet pack '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/src/web-game/Globomantics.sln' --configuration Release --no-build --output .
          
      - name: 'Publish app'
        run: |
          dotnet publish '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/src/web-game/Globomantics.sln' -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/app-package'

      - name: Create Draft Release
        id: create_draft_release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'origin/develop/')   
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.base_ref }}_0.1.0
          name: Globomantics
          draft: true
          prerelease: false
